{{- if .Values.deployment.create }}
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  labels:
    app: workflow-controller
  name: workflow-controller
  namespace: {{ .Release.Namespace }}
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: workflow-controller
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: workflow-controller
    spec:
      containers:
      - args: [
          "--configmap",
          "workflow-controller-configmap",
          "--executor-image",
          "{{ .Values.images.argoexec.repository }}:{{ .Values.images.argoexec.tag }}"
        ]
        command:
        - workflow-controller
        env:
        - name: ARGO_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: {{ .Values.images.workflowController.repository }}:{{ .Values.images.workflowController.tag }}
        imagePullPolicy: {{ .Values.images.imagePullPolicy }}
        name: workflow-controller
        resources:
{{ toYaml .Values.resources | indent 10 }}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: argo
      serviceAccountName: argo
      terminationGracePeriodSeconds: 30
{{- end }}
